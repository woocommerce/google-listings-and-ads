name: PHP Unit Tests

on:
  push:
    branches:
      - trunk
      - develop
  pull_request:

jobs:
  Setup:
    name: Setup for jobs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log debug information
        run: |
          node --version
          npm --version
          composer --version

      - name: Get npm cache directory
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Update npm cache directory # if package-lock has changed
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Get Composer cache directory
        id: composer-cache-config
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-config.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Update Composer cache directory # if composer-lock has changed
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction

  UnitTests:
    name: PHP unit tests - PHP ${{ matrix.php }}, WP ${{ matrix.wp-version }}
    needs: Setup
    runs-on: ubuntu-latest
    env:
      WP_CORE_DIR: "/tmp/wordpress/src"
      WP_TESTS_DIR: "/tmp/wordpress/tests/phpunit"
    strategy:
      matrix:
        php: [7.3, 7.4]
        wp-version: [5.6, 5.7, 5.8]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get npm cache directory
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get Composer cache directory
        id: composer-cache-config
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-config.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set up MySQL
        # MySQL 8.0 uses the `caching_sha2_password` authentication method by default.
        # So here alter password with `mysql_native_password` authentication method
        # to make older PHP (7.3.x) mysql client be able to create database connections.
        run: |
          sudo systemctl start mysql.service
          mysql -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction

      - name: Install Node dependencies and build
        run: |
          npm ci
          npm run dev

      - name: Install WP tests
        shell: bash
        run: ./bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wp-version }}

      - name: Run PHP unit tests
        run: composer test-unit
